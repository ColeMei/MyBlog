class ThemeToggle{constructor(){this.theme=this.getStoredTheme()||this.getPreferredTheme(),this.init()}getStoredTheme(){return localStorage.getItem("theme")}setStoredTheme(e){localStorage.setItem("theme",e)}getPreferredTheme(){return window.matchMedia("(prefers-color-scheme: light)").matches?"light":"dark"}applyTheme(e){document.documentElement.setAttribute("data-theme",e),this.theme=e,this.setStoredTheme(e);const t=document.querySelector(".theme-toggle input");t&&(t.checked=e==="light")}toggleTheme(){const e=this.theme==="dark"?"light":"dark";this.applyTheme(e)}createToggleSwitch(){const e=document.createElement("div");e.className="theme-toggle-container",e.innerHTML=`
      <label class="theme-toggle" title="Toggle between light and dark theme">
        <input type="checkbox" ${this.theme==="light"?"checked":""}>
        <span class="theme-slider"></span>
        <span class="sr-only">Toggle theme</span>
      </label>
    `;const t=e.querySelector("input");return t.addEventListener("change",()=>{this.toggleTheme()}),t.addEventListener("keydown",e=>{(e.key==="Enter"||e.key===" ")&&(e.preventDefault(),this.toggleTheme())}),e}init(){this.applyTheme(this.theme),document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{this.addToggleSwitch()}):this.addToggleSwitch(),window.matchMedia("(prefers-color-scheme: light)").addEventListener("change",e=>{this.getStoredTheme()||this.applyTheme(e.matches?"light":"dark")})}addToggleSwitch(){const e=this.createToggleSwitch();document.body.appendChild(e)}}new ThemeToggle